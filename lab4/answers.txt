# Fill in your name, student ID, and email address in this file.
# If you are working in a team, fill out the information for both team 
# members.

# SUBMIT THE LAB ONLY ONCE (from only one partner). This file will be
# automatically parsed in order to give both team members credit for the
# lab.

# You need to fill in the EXERCISE sections describing your solutions
# for Tasks 1, 2, and 3, as well as write the corresponding code.
# If you did one or more extra credit problems, indicate which one in the
# appropriate section below (remove the # sign first). If you have any other
# information you'd like us to know, please add it at the end of the file.

# Partner 1
Name: Matthew Allen Lin
Student ID: 904281426
Email: darthpwner@yahoo.com

# Partner 2 (if you're working in a team)
Name: Akhil Nadendla
Student ID: 
Email: 

# EXERCISE 1: What method you used to make your peer download and upload
#    files in parallel?  (~1-3 sentences)

We implemented forking processes to make our peer download and upload files in
parallel. This method is also what Tuan recommended doing since it was similar
to Lab 1, so we decided to use this implementation.

# EXERCISE 2A: What conditions did you find and fix that would have
#    triggered a buffer overrun bug?  (~1-3 sentences each)

We found that simply doing strcpy without specifying a size could potentially
cause a buffer overrun. The way we fixed this was changing strcpy to strncpy
and specifiyng the size parameter to be of size FILENAMESIZ. We also set
the zero byte at the last element FILENAMESIZE - 1 for read and copy later.

# EXERCISE 2B: What other robustness problems did you fix?  (~1-3 sentences
#    each)

# EXERCISE 3: Describe the attacks you implemented for "evil mode".  Why
#    are they attacks?  (~3-10 sentences each)

# Extra credit problems
#Extra credit problem: none

# Add any other information you'd like us to know below this line.
